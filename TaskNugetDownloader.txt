Напиши консольное приложение на C# (.NET 9), которое выполняет следующие задачи:

1. Читает файл Directory.Packages.props (MSBuild XML).
2. Извлекает из него все элементы <PackageVersion Include="..." Version="..."/>.
3. Для каждого пакета пытается найти соответствующий .nupkg в нескольких NuGet-репозиториях:
   - Список репозиториев передаётся аргументами командной строки (через запятую).
   - Для nuget.org использовать FlatContainer API:
     https://api.nuget.org/v3-flatcontainer/{id-lower}/{version}/{id-lower}.{version}.nupkg
   - Для Nexus и других репозиториев использовать настраиваемый URL-шаблон:
     {repo}/{id}/{version}/{id}.{version}.nupkg
4. Если пакет найден в одном из репозиториев, скачать его и сохранить в указанную локальную папку (задаётся аргументом).
5. Если файл уже существует локально — повторно не скачивать.
6. Если пакет не найден ни в одном репозитории — выводить предупреждение в консоль.
7. Реализовать возможность отключения проверки SSL-сертификата (для случаев с самоподписанными или просроченными сертификатами).
8. Добавить вывод логов:
   - "✔" — пакет скачан или уже есть,
   - "→" — проверка репозитория,
   - "✖" — ошибка при скачивании,
   - "‼" — пакет не найден.
9. Путь к Directory.Packages.props, выходной каталог и список источников должны задаваться аргументами командной строки.
10. Код должен быть кроссплатформенным (работать под Windows и Linux).
11. Желательно реализовать параллельное скачивание для ускорения работы.

Пример запуска:
dotnet run -- ../Directory.Packages.props ./offline-packages "https://api.nuget.org/v3-flatcontainer,https://nexus.company.ru/repository/DevPackages"
